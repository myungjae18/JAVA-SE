package messenger.server;

import java.awt.BorderLayout;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Vector;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;



public class MainServer extends JFrame {
	JPanel p_north;
	JTextField t_port;
	JButton bt;
	JTextArea area;
	JScrollBar bar;
	JScrollPane scroll;
	ServerSocket server; // 접속자 감지용 소켓
	int port = 8888;
	Thread serverThread;
	Vector<ServerThread> clientList=new Vector<ServerThread>();

	public MainServer() {
		p_north = new JPanel();
		t_port = new JTextField(Integer.toString(port), 8);
		bt = new JButton("서버가동");
		area = new JTextArea();
		scroll = new JScrollPane(area);
		bar = scroll.getVerticalScrollBar();
		serverThread = new Thread() {
			public void run() {
				serverRun();
			}
		};

		p_north.add(t_port);
		p_north.add(bt);
		add(p_north, BorderLayout.NORTH);
		add(scroll);

		bt.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				serverThread.start(); 
			}
		});

		area.setFont(new Font("돋움", Font.BOLD, 23)); // font 사이즈 조절하기
		setSize(500, 800);
		setVisible(true);
		setDefaultCloseOperation(EXIT_ON_CLOSE);

	}

	public void serverRun() {
		port = Integer.parseInt(t_port.getText());
		try {
			server = new ServerSocket(port);
			area.append("서버가동\n");
			
			while(true) {
				Socket client=server.accept();
				String ip=client.getInetAddress().getHostAddress();
				area.append(ip+"님 접속했습니다.");
				ServerThread st = new  ServerThread(this, client);
				st.start();
				clientList.add(st);
				area.append("현재 : "+clientList.size()+"명 접속중");
			}
			
			
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	public static void main(String[] args) {
		new MainServer();

	}

}
